version: "3.3"

services:
  db:
   image: postgres:14.1-alpine
   container_name: postgres
   restart: always
   tty: true
   volumes:
     - ../.pgdata:/var/lib/postgresql/data
   environment:
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=secret
     - POSTGRES_DB=distributed-system
   ports:
     - 0.0.0.0:5432:5432
  mongodb:
    platform: linux/x86_64
    image: mongo:4.4.20
    container_name: mongodb
    ports:
      - 0.0.0.0:27017:27017
    volumes:
      - ../.mongo:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=secret
  zookeeper:
    platform: linux/x86_64
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    platform: linux/x86_64
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - "29092:29092"
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
  user-api:
    platform: linux/x86_64
    build: ./pkg/userapi/.
    container_name: user-api
    command: ["gunicorn", "-w", "4", "-k", "uvicorn.workers.UvicornWorker", "--bind", "0.0.0.0:8000:8000", "pkg.userapi.server:app"]
    ports:
    - "0.0.0.0:8000:8000"
    volumes:
      - .:/usr/src/app
  kafkaui:
    platform: linux/x86_64
    container_name: kafkaui
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
      KAFKA_CLUSTERS_0_NAME: "KAFKA LOCAL"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
  web:
    platform: linux/x86_64
    build: .
    depends_on:
      - kafka
      - db
    environment:
      - POSTGRES_HOST=postgres://postgres:secret@db:5432/distributed-system?sslmode=disable
      - HOST=0.0.0.0
      - PORT=8010
      - KAFKA_HOST=kafka
      - KAFKA_PORT=29092
    command: ["/exe", "server"]
    ports:
      - "0.0.0.0:8010:8010"
    volumes:
      -  .:/go/src/app
  validate-balance-worker:
    platform: linux/x86_64
    build: .
    depends_on:
      - kafka
      - user-api
    environment:
      - KAFKA_HOST=kafka
      - KAFKA_PORT=29092
    volumes:
      -  .:/go/src/app
    command: ["/exe", "validate-balance-worker"]
  validate-user-status-worker:
    platform: linux/x86_64
    build: .
    depends_on:
      - kafka
      - user-api
    environment:
      - KAFKA_HOST=kafka
      - KAFKA_PORT=29092
      - USERAPI_BASEURL=http://user-api:8000/api/
    volumes:
      -  .:/go/src/app
    command: ["/exe", "validate-user-status-worker"]
  orchestrator:
    platform: linux/x86_64
    build: .
    depends_on:
      - kafka
      - mongodb
    environment:
      - KAFKA_HOST=kafka
      - KAFKA_PORT=29092
      - MONGODB_HOST=mongodb://root:secret@mongodb:27017/?maxPoolSize=20&w=majority
    volumes:
      -  .:/go/src/app
    command: ["/exe", "orchestrator"]
  # TESTS
  test-e2e:
    platform: linux/x86_64
    container_name: test-e2e
    build: ./tests/e2e/.
    environment:
    - BASE_URL=http://web:8010/api
    depends_on:
    - web
    command: ["behave"]
    volumes:
      -  .:/usr/src/app/tests/e2e
volumes:
  .pgdata:
    driver: local
  .mongo:
    driver: local
